// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentOptions.Data;

#nullable disable

namespace PaymentOptions.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250529181616_add_mapping_5")]
    partial class add_mapping_5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentOptions.Model.ChannelDetail", b =>
                {
                    b.Property<int>("ChannelDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelDetailId"));

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChannelDetailId");

                    b.ToTable("ChannelDetails");
                });

            modelBuilder.Entity("PaymentOptions.Model.MCarrierCode", b =>
                {
                    b.Property<int>("CarrierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarrierID"));

                    b.Property<string>("CarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("CarrierID");

                    b.ToTable("MCarrierCode");

                    b.HasData(
                        new
                        {
                            CarrierID = 1,
                            CarrierCode = "AK",
                            Code = 1,
                            CreatedBy = "admin_2",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PaymentOptions.Model.MCultureCode", b =>
                {
                    b.Property<int>("CultureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CultureID"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CultureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("CultureID");

                    b.ToTable("MCultureCode");
                });

            modelBuilder.Entity("PaymentOptions.Model.MCurrencyCode", b =>
                {
                    b.Property<int>("CurrencyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyID"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyID");

                    b.ToTable("MCurrencyCode");
                });

            modelBuilder.Entity("PaymentOptions.Model.MLob", b =>
                {
                    b.Property<int>("LobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LobId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LobName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LobId");

                    b.ToTable("MLobs");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentChannel", b =>
                {
                    b.Property<int>("PaymentChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentChannelId"));

                    b.Property<string>("ChannelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartialPayment")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentChannelId");

                    b.ToTable("PaymentChannels");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CultureIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GatewayId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("MLobs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoreInfoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTabId")
                        .HasColumnType("int");

                    b.Property<int>("PreExpand")
                        .HasColumnType("int");

                    b.Property<string>("ProcessingFeeCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("SupportedBanksImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodId");

                    b.HasIndex("PaymentTabId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentTab", b =>
                {
                    b.Property<int>("PaymentTabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTabId"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayMethodName")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool>("IsPartialPayment")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentChannelId")
                        .HasColumnType("int");

                    b.Property<string>("PreExpand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("TabCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTabId");

                    b.HasIndex("PaymentChannelId");

                    b.ToTable("PaymentTabs");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentMethod", b =>
                {
                    b.HasOne("PaymentOptions.Model.PaymentTab", "PaymentTab")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("PaymentTabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentTab");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentTab", b =>
                {
                    b.HasOne("PaymentOptions.Model.PaymentChannel", "Channel")
                        .WithMany("Tabs")
                        .HasForeignKey("PaymentChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentChannel", b =>
                {
                    b.Navigation("Tabs");
                });

            modelBuilder.Entity("PaymentOptions.Model.PaymentTab", b =>
                {
                    b.Navigation("PaymentMethods");
                });
#pragma warning restore 612, 618
        }
    }
}
